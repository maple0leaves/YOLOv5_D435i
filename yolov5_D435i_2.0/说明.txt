situation ：导师电力横向课题中的需求 1.检测人与人之间的距离，2.验电棒与电线之间的距离
            需求1是因为当时疫情时期，人与人之间需要保持距离，避免交叉感染，当小于一定距离时要发出警报
            需求2在电力培训中有一项任务是验电，验电棒要和电线接触，如果验电棒发出警报，说明电线有电，没有发出警报说明电线没有电
            判定验电棒是否和电线接触，就需要检测他们之间的距离

task:       使用yolov5和D435i的SDK 对D435i进行开发，获取相同类别或不同类别之间的三维距离
            yolov5：实时目标检测算法，结构包括 input backbone neck head
            Intel realsense D435i深度摄像头:Intel使用realsense(实感)技术开发出来的的深度摄像头，可以获取目标的三维信息
            左右红外相机进行测量深度，中间红外点阵投射器相当于补光灯；最右边的rgb相机用于采集彩色图片，最终可以将彩色视频流与深度流进行对齐
            官网：https://www.intelrealsense.com/zh-hans/depth-camera-d435i/
            参考：https://blog.csdn.net/lemonxiaoxiao/article/details/109297834

action(或许还可以补充)：github找yolov5官方代码，跑通代码，看懂网络结构，到Intel realsense D435i官方网站下载sdk，了解D435i如何使用，把官网上的code example跑一下
        查看效果，去网上找有没有开源代码已经实现这个功能（找了好久只找到获取目标到相机之间三维距离的例子，没有找到使用yolov5+D435i检测物体之间的距离）
        最终第一版在https://github.com/killnice/yolov5-D435i 基础上进行开发，这个开源代码实现了从网上下载yolov5权重，利用检测结果中的
        二维坐标来获取相机与物体之间的三维距离（坐标原点是相机，z轴是相机到物体的三维距离，横竖分别为xy轴），改进:使用yolov5检测结果中的坐标绘制
        物体中心点，双重for循环再遍历yolov5检测结果，当类别是'person',通过自己写的距离函数，计算person之间的三维距离并使用OpenCV绘制到每一帧中
        (检测结果有左上角，右下角坐标，执信度，类别下标，类别名，利用二维中心点坐标来获取对应三维坐标，然后用距离公式计算在相机坐标系中person之间的距离)
        ,最后使用检测结果中的坐标在每一帧中绘制'person'类别的预测框(使用while循环读取每一帧图片，就变成了实时视频)优点：不用自己训练权重，直接
        使用torch.hub.load()函数下载官方训练好之后的权重，然后把每一帧图片送入模型就可以获取检测结果，方便快捷 缺点：只能检测固定类别，即yolov5
        官方在coco数据集上训练的类别，需要下载权重，如果网络不好很难下载。
        第二版，基于第一版的优缺点和需要对验电棒，电线这种自定义类别进行检测，所以开发了第二版，第二版在
        https://github.com/Thinkin99/yolov5_d435i_detection的基础上进行开发，这个代码同样只能检测出物体与相机之间的三维距离，但区别在于
        这个开源代码可以加载本地yolov5模型，不需要网上下载，这样就可以训练出自己的模型，识别自定义的类别，例如我们需要检测的验电棒和电线(为什么不使用
        官方yolov5的代码进行模型加载，因为这个代码的作者参考了https://github.com/mushroom-x/yolov5-simple，让yolov5代码更
        加简单，去除了其他无关的功能，比如训练功能，测试功能，分割功能等，最后只需要配置yaml文件，然后把视频逐帧检测就可以了)
        改进：1、可以在yaml中指定target类别，检测1个或以上类别之间的三维距离 2、沿用了第一版的距离函数计算物体之间的三维距离 3、修改了原作者
        中模型载入类YOLOv5，①传入类别list，修改detect实例方法，只绘制类别list中的预测框 ②修改了要检测图像尺寸，(在模型加载中默认是640x640
        ,而D435i只能读取 1280x720, 640x480, 848x480 尺寸图片，其他尺寸会报错,如果在加载模型时设置的尺寸和相机读取的尺寸不一致，在获取三维
        坐标的时候会报错，超出距离）最后运行时只需要修改config/yolov5s.yaml文件，然后运行main2.py即可，不需要修改任何代码

result: 1、开发出了yolov5目标检测网络和D435i深度摄像头结合的物体三维距离检测程序(目前网上主流的开发是目标检测算法和D435i结合，得到预测物体与相机之间的距离)，
           代码在github中开源
        2、进一步理解了YOLOv5网络如何加载模型进行检测，懂得了如何利用产品的SDK进行开发(之前从来没有使用一个产品的SDK进行开发)
        3、知道了开发一个产品首先要去的是官网，了解相关信息，而不是盲目网上搜索(这个太重要了，吃过亏才记得)

          在实验室条件下，D435i在.3-3米内可以准确识别物体之间的距离，但是在室外场所，由于光照影响太大可能导致识别的距离不太准确(官网上说室内室外
        都可以使用，实践过后返现还是有些出入)
          如果觉得检测距离不够，可以换D400系列中的其他深度摄像头，SDK都是通用的，实际上我在开发完使用的时候才发现距离不够，所以导师又买了一个D455
        检测距离在0.6-6米之间
        正是因为在户外光照过强的条件下摄像头检测不准确，所以我开发的这个程序只能在实验室条件下使用并没有投入到实际场景中使用

last：    这个程序是我大二的时候开发的，当时是导师有这个想法，然后让我去实现，一开始我没有接触过使用产品的SDK去开发，所以当时是真的什么都不知道
        就连使用Intel realsense viewer这个软件使用摄像头都不知道，现在想起来都有点好笑，后面知道去官网了解信息，提供了SDK给开发人员，也有用不同
        语言写的code example，可以去github找别人开源代码参考，其实开发过程中比较难的是知道各种类和函数的作用和如何使用，清楚这些之后就可以
        按照自己的想法来开发（我好想是没有找到pyrealsense2这个包的文档，不然看着文档开发会更轻松一点）

        最后感谢导师叫我开发这个程序，确实学到了蛮多有用的东西，长了见识，原来还有这样的摄像头，原来官网是这个作用
        当时大二纯小白一个，独立解决问题的能力真的可以说是几乎没有，还在他那发过牢骚
        （估计他自己写的话，一下子就写好了吧）哈哈哈
        感谢那些无私开源自己代码的人，真的提高了我开发效率，而且我也从中学到了如何写出更漂亮的代码（之前我写的代码不堪入目，哈哈哈）
        感谢在互联网上无私分享自己知识的人。


